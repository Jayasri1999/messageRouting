[{
  "_id": {
    "$oid": "67bd31968c99ba1e5e1797d1"
  },
  "category": "groceries",
  "subCategory": "freshProduce",
  "routingName": "groceriesProcessFlow",
  "inputQueue": "groceries.freshProduce.in",
  "outputQueue": "splitter.in",
  "xsltContent": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n     <xsl:output method=\"text\" encoding=\"UTF-8\"/>\n \n     <xsl:template match=\"/\">\n         {\n             \"order\": {\n                 \"id\": \"<xsl:value-of select=\"/order/id\"/>\",\n                 \"customer\": \"<xsl:value-of select=\"/order/customer\"/>\",\n                 \"amount\": \"<xsl:value-of select=\"/order/amount\"/>\",\n                 \"country\": \"<xsl:value-of select=\"/order/country\"/>\",\n                 \"category\": {\n                     \"name\": \"<xsl:value-of select=\"/order/category/name\"/>\",\n                     \"subcategories\": [\n                         <xsl:for-each select=\"/order/category/subcategories/subcategory\">\n                             {\n                                 \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                 \"items\": [\n                                     <xsl:for-each select=\"items/item\">\n                                         {\n                                             \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                             \"price\": \"<xsl:value-of select=\"price\"/>\",\n \t\t\t\t\t    \"loyaltyPoints\": \"<xsl:value-of select=\"loyaltyPoints\"/>\"\n                                         }<xsl:if test=\"position() != last()\">,</xsl:if>\n                                     </xsl:for-each>\n                                 ]\n                             }<xsl:if test=\"position() != last()\">,</xsl:if>\n                         </xsl:for-each>\n                     ]\n                 }\n             }\n         }\n     </xsl:template>\n </xsl:stylesheet>",
  "splitter": {
    "inputQueue": "splitter.in",
    "outputQueue": "exit.in"
  }
},
{
  "_id": {
    "$oid": "67bd31f18c99ba1e5e1797d3"
  },
  "category": "jewelry",
  "subCategory": "diamonds",
  "routingName": "jewelryProcessFlow",
  "inputQueue": "jewelry.diamonds.in",
  "outputQueue": "splitter.in",
  "xsltContent": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n     <xsl:output method=\"text\" encoding=\"UTF-8\"/>\n \n     <xsl:template match=\"/\">\n         {\n             \"order\": {\n                 \"id\": \"<xsl:value-of select=\"/order/id\"/>\",\n                 \"customer\": \"<xsl:value-of select=\"/order/customer\"/>\",\n                 \"amount\": \"<xsl:value-of select=\"/order/amount\"/>\",\n                 \"country\": \"<xsl:value-of select=\"/order/country\"/>\",\n                 \"category\": {\n                     \"name\": \"<xsl:value-of select=\"/order/category/name\"/>\",\n                     \"subcategories\": [\n                         <xsl:for-each select=\"/order/category/subcategories/subcategory\">\n                             {\n                                 \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                 \"items\": [\n                                     <xsl:for-each select=\"items/item\">\n                                         {\n                                             \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                             \"price\": \"<xsl:value-of select=\"price\"/>\",\n \t\t\t\t\t    \"appraisalValue\": \"<xsl:value-of select=\"appraisalValue\"/>\"\n                                         }<xsl:if test=\"position() != last()\">,</xsl:if>\n                                     </xsl:for-each>\n                                 ]\n                             }<xsl:if test=\"position() != last()\">,</xsl:if>\n                         </xsl:for-each>\n                     ]\n                 }\n             }\n         }\n     </xsl:template>\n </xsl:stylesheet>",
  "splitter": {
    "inputQueue": "splitter.in",
    "outputQueue": "exit.in"
  }
},
{
  "_id": {
    "$oid": "67bd32678c99ba1e5e1797d5"
  },
  "category": "kidsToys",
  "subCategory": "actionFigures",
  "routingName": "actionFigureToysProcessFlow",
  "inputQueue": "kidsToys.actionFigures.in",
  "outputQueue": "splitter.in",
  "xsltContent": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n     <xsl:output method=\"text\" encoding=\"UTF-8\"/>\n \n     <xsl:template match=\"/\">\n         {\n             \"order\": {\n                 \"id\": \"<xsl:value-of select=\"/order/id\"/>\",\n                 \"customer\": \"<xsl:value-of select=\"/order/customer\"/>\",\n                 \"amount\": \"<xsl:value-of select=\"/order/amount\"/>\",\n                 \"country\": \"<xsl:value-of select=\"/order/country\"/>\",\n                 \"category\": {\n                     \"name\": \"<xsl:value-of select=\"/order/category/name\"/>\",\n                     \"subcategories\": [\n                         <xsl:for-each select=\"/order/category/subcategories/subcategory\">\n                             {\n                                 \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                 \"items\": [\n                                     <xsl:for-each select=\"items/item\">\n                                         {\n                                             \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                             \"price\": \"<xsl:value-of select=\"price\"/>\",\n \t\t\t\t\t    \"ageGroup\": \"<xsl:value-of select=\"ageGroup\"/>\"\n                                         }<xsl:if test=\"position() != last()\">,</xsl:if>\n                                     </xsl:for-each>\n                                 ]\n                             }<xsl:if test=\"position() != last()\">,</xsl:if>\n                         </xsl:for-each>\n                     ]\n                 }\n             }\n         }\n     </xsl:template>\n </xsl:stylesheet>",
  "splitter": {
    "inputQueue": "splitter.in",
    "outputQueue": "exit.in"
  }
},
{
  "_id": {
    "$oid": "67bd32768c99ba1e5e1797d7"
  },
  "category": "kidsToys",
  "subCategory": "generic",
  "routingName": "kidsToysProcessFlow",
  "inputQueue": "kidsToys.generic.in",
  "outputQueue": "splitter.in",
  "xsltContent": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n     <xsl:output method=\"text\" encoding=\"UTF-8\"/>\n \n     <xsl:template match=\"/\">\n         {\n             \"order\": {\n                 \"id\": \"<xsl:value-of select=\"/order/id\"/>\",\n                 \"customer\": \"<xsl:value-of select=\"/order/customer\"/>\",\n                 \"amount\": \"<xsl:value-of select=\"/order/amount\"/>\",\n                 \"country\": \"<xsl:value-of select=\"/order/country\"/>\",\n                 \"category\": {\n                     \"name\": \"<xsl:value-of select=\"/order/category/name\"/>\",\n                     \"subcategories\": [\n                         <xsl:for-each select=\"/order/category/subcategories/subcategory\">\n                             {\n                                 \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                 \"items\": [\n                                     <xsl:for-each select=\"items/item\">\n                                         {\n                                             \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                             \"price\": \"<xsl:value-of select=\"price\"/>\",\n \t\t\t\t\t    \"ageGroup\": \"<xsl:value-of select=\"ageGroup\"/>\"\n                                         }<xsl:if test=\"position() != last()\">,</xsl:if>\n                                     </xsl:for-each>\n                                 ]\n                             }<xsl:if test=\"position() != last()\">,</xsl:if>\n                         </xsl:for-each>\n                     ]\n                 }\n             }\n         }\n     </xsl:template>\n </xsl:stylesheet>",
  "splitter": {
    "inputQueue": "splitter.in",
    "outputQueue": "exit.in"
  }
},
{
  "_id": {
    "$oid": "67bd32bc8c99ba1e5e1797d9"
  },
  "category": "shoes",
  "subCategory": "sneakers",
  "routingName": "shoeProcessFlow",
  "inputQueue": "shoes.sneakers.in",
  "outputQueue": "splitter.in",
  "xsltContent": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n     <xsl:output method=\"text\" encoding=\"UTF-8\"/>\n \n     <xsl:template match=\"/\">\n         {\n             \"order\": {\n                 \"id\": \"<xsl:value-of select=\"/order/id\"/>\",\n                 \"customer\": \"<xsl:value-of select=\"/order/customer\"/>\",\n                 \"amount\": \"<xsl:value-of select=\"/order/amount\"/>\",\n                 \"country\": \"<xsl:value-of select=\"/order/country\"/>\",\n                 \"category\": {\n                     \"name\": \"<xsl:value-of select=\"/order/category/name\"/>\",\n                     \"subcategories\": [\n                         <xsl:for-each select=\"/order/category/subcategories/subcategory\">\n                             {\n                                 \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                 \"items\": [\n                                     <xsl:for-each select=\"items/item\">\n                                         {\n                                             \"name\": \"<xsl:value-of select=\"name\"/>\",\n                                             \"price\": \"<xsl:value-of select=\"price\"/>\",\n \t\t\t\t\t    \"size\": \"<xsl:value-of select=\"size\"/>\"\n                                         }<xsl:if test=\"position() != last()\">,</xsl:if>\n                                     </xsl:for-each>\n                                 ]\n                             }<xsl:if test=\"position() != last()\">,</xsl:if>\n                         </xsl:for-each>\n                     ]\n                 }\n             }\n         }\n     </xsl:template>\n </xsl:stylesheet>",
  "splitter": {
    "inputQueue": "splitter.in",
    "outputQueue": "exit.in"
  }
}]